{"version":3,"sources":["../node_modules/warning/warning.js","components/FormGroup/FormGroup.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Form.js","components/Registartion/Registartion.js","views/RegisterView/RegisterView.js"],"names":["warning","module","exports","FormGroup","groupClass","controlId","labelClass","labelText","controlProps","children","Group","className","Label","Control","defaultProps","Container","React","ref","bsPrefix","fluid","as","Component","props","prefix","useBootstrapPrefix","suffix","_jsx","classNames","displayName","propTypes","type","PropTypes","string","tooltip","bool","elementType","Feedback","FormContext","FormCheckInput","id","isValid","isInvalid","useContext","FormCheckLabel","htmlFor","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","style","title","label","innerFormContext","useMemo","hasLabel","input","Provider","value","_jsxs","_Fragment","Object","assign","Input","FormControl","classes","size","htmlSize","plaintext","readOnly","createWithBsPrefix","context","DEVICE_SIZES","Col","spans","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","FloatingLabel","_ref","any","validated","Form","Floating","FormFloating","Check","Text","Range","Select","Registration","location","useLocation","useState","isChecked","setIsChecked","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","e","a","preventDefault","authOperations","signupUser","onSubmit","placeholder","onChange","target","checked","to","pathname","state","background","Button","variant","RegisterView"],"mappings":"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","file":"static/js/6.43a2f3c4.chunk.js","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst FormGroup = ({\n  groupClass,\n  controlId,\n  labelClass,\n  labelText,\n  controlProps,\n  children,\n}) => (\n  <Form.Group className={groupClass} controlId={controlId}>\n    <Form.Label className={labelClass}>{labelText}</Form.Label>\n    <Form.Control {...controlProps} />\n    {children && children}\n  </Form.Group>\n);\n\nFormGroup.defaultProps = {\n  labelClass: null,\n  children: null,\n};\n\nFormGroup.propTypes = {\n  groupClass: PropTypes.string.isRequired,\n  controlId: PropTypes.string.isRequired,\n  labelClass: PropTypes.string,\n  labelText: PropTypes.string.isRequired,\n  controlProps: PropTypes.object.isRequired,\n  children: PropTypes.element,\n};\n\nexport default FormGroup;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  fluid: false\n};\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), (isValid || isInvalid) && /*#__PURE__*/_jsx(Feedback, {\n          type: isValid ? 'valid' : 'invalid',\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...classes, ...spans)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FormContainer } from '../../components/Container';\nimport FormGroup from '../FormGroup/FormGroup';\nimport { authOperations } from '../../redux/auth';\nimport { useDispatch } from 'react-redux';\n\nexport default function Registration() {\n  const location = useLocation();\n  const [isChecked, setIsChecked] = useState(false);\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n\n  function handleCHangeChecked(e) {\n    setIsChecked(!isChecked);\n  }\n  async function handleSubmit(e) {\n    e.preventDefault();\n    dispatch(authOperations.signupUser({ name, email, password }));\n    setName('');\n    setEmail('');\n    setIsChecked(false);\n    setPassword('');\n  }\n\n  return (\n    <FormContainer>\n      <Form onSubmit={handleSubmit}>\n        <FormGroup\n          groupClass=\"mb-3\"\n          controlId=\"formBasicName\"\n          labelText=\"Name\"\n          controlProps={{\n            type: 'text',\n            value: name,\n            placeholder: 'Enter Name',\n            onChange: e => setName(e.target.value),\n          }}\n        />\n        <FormGroup\n          groupClass=\"mb-3\"\n          controlId=\"formBasicEmail\"\n          labelText=\"Email address\"\n          controlProps={{\n            type: 'email',\n            value: email,\n            placeholder: 'Enter email',\n            onChange: e => setEmail(e.target.value),\n          }}\n        >\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else.\n          </Form.Text>\n        </FormGroup>\n\n        <FormGroup\n          groupClass=\"mb-3\"\n          controlId=\"formBasicPassword\"\n          labelText=\"Password\"\n          controlProps={{\n            type: 'password',\n            value: password,\n            placeholder: 'Password',\n            onChange: e => setPassword(e.target.value),\n          }}\n        />\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n          <Form.Check type=\"checkbox\">\n            <Form.Check.Input\n              type=\"checkbox\"\n              onChange={handleCHangeChecked}\n              checked={isChecked}\n            />\n            <Form.Check.Label>\n              Accept{' '}\n              <Link\n                to={{\n                  pathname: '/privacy_policy',\n                  state: { background: location },\n                }}\n              >\n                Privacy policy\n              </Link>\n            </Form.Check.Label>\n          </Form.Check>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" disabled={!isChecked}>\n          Register\n        </Button>\n      </Form>\n    </FormContainer>\n  );\n}\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport Registration from '../../components/Registartion/Registartion';\n\nconst RegisterView = () => (\n  <Container>\n    <Registration />\n  </Container>\n);\n\nexport default RegisterView;\n"],"sourceRoot":""}