{"version":3,"sources":["components/FormGroup/FormGroup.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.js","components/Filter/Filter.js","icons/add.svg","components/ContactForm/ContactForm.js","views/ContactsView/ContactView.js"],"names":["FormGroup","groupClass","controlId","labelClass","labelText","controlProps","children","Group","className","Label","Control","defaultProps","module","exports","ContactList","contacts","useSelector","contactsSelectors","getContactsWithFilter","isLoading","dispatch","useDispatch","useEffect","contactOperations","fetchContacts","map","name","number","id","styles","Item","Text","type","Button","onClick","toast","info","deleteContact","onDeleteElement","Filter","filter","getFilter","getContacts","inputId","React","useRef","uuidv4","length","current","value","onChange","e","contactsActions","filterAction","target","trim","_path","_path2","_excluded","_extends","Object","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgAdd","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","d","fill","ForwardRef","ContactForm","show","onHide","inputIdName","inputIdNumber","useState","newName","setNewName","setNumber","items","createPortal","Modal","size","centered","keyboard","Header","closeButton","Title","Form","style","onSubmit","preventDefault","some","toLowerCase","error","addNewContact","success","Input","AddBtn","variant","color","document","getElementById","ContactsView","params","setShow","Container","btn","width","height"],"mappings":"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","file":"static/js/4.601e743f.chunk.js","sourcesContent":["import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nconst FormGroup = ({\n  groupClass,\n  controlId,\n  labelClass,\n  labelText,\n  controlProps,\n  children,\n}) => (\n  <Form.Group className={groupClass} controlId={controlId}>\n    <Form.Label className={labelClass}>{labelText}</Form.Label>\n    <Form.Control {...controlProps} />\n    {children && children}\n  </Form.Group>\n);\n\nFormGroup.defaultProps = {\n  labelClass: null,\n  children: null,\n};\n\nFormGroup.propTypes = {\n  groupClass: PropTypes.string.isRequired,\n  controlId: PropTypes.string.isRequired,\n  labelClass: PropTypes.string,\n  labelText: PropTypes.string.isRequired,\n  controlProps: PropTypes.object.isRequired,\n  children: PropTypes.element,\n};\n\nexport default FormGroup;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"ContactList_Button__3VdPC\",\"Item\":\"ContactList_Item__2FVXc\",\"Text\":\"ContactList_Text__t0-rd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"Filter_Label__tRcyf\",\"Input\":\"Filter_Input__1NP7u\",\"Item\":\"Filter_Item__2h208\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__38b2P\",\"AddBtn\":\"ContactForm_AddBtn__1W2qr\",\"Item\":\"ContactForm_Item__2lpU4\",\"Label\":\"ContactForm_Label__1Wc2i\",\"Input\":\"ContactForm_Input__39cfc\"};","import React, { useEffect } from 'react';\nimport styles from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { contactsSelectors } from '../../redux/contacts';\nimport { contactOperations } from '../../redux/contacts';\nimport Loading from '../Loader/Loader';\n\nexport default function ContactList() {\n  const contacts = useSelector(contactsSelectors.getContactsWithFilter);\n  const isLoading = useSelector(contactsSelectors.isLoading);\n  const dispatch = useDispatch();\n\n  const onDeleteElement = ({ id, name }) => {\n    toast.info(name + ' is deleted');\n    return dispatch(contactOperations.deleteContact(id));\n  };\n\n  useEffect(() => {\n    dispatch(contactOperations.fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <Loading />;\n  } else if (!isLoading && contacts[0]) {\n    return (\n      <ul>\n        {contacts.map(({ name, number, id }) => {\n          return (\n            <li key={id}>\n              <div className={styles.Item}>\n                <p className={styles.Text}>\n                  {name}: <span>{number}</span>\n                </p>\n                <button\n                  type=\"button\"\n                  className={styles.Button}\n                  onClick={() => onDeleteElement({ id, name })}\n                >\n                  Delete\n                </button>\n              </div>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  } else {\n    return <h3>is Empty</h3>;\n  }\n}\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport FormGroup from '../FormGroup/FormGroup';\n\nexport default function Filter() {\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n  const inputId = React.useRef(uuidv4());\n  return (\n    contacts.length > 1 && (\n      <div className={styles.Item}>\n        <FormGroup\n          groupClass=\"mb-3\"\n          controlId={inputId.current}\n          labelClass={styles.Label}\n          labelText=\"Find contacts by name\"\n          controlProps={{\n            type: 'search',\n            value: filter,\n            onChange: e =>\n              dispatch(\n                contactsActions.filterAction(`${e.target.value.trim()}`),\n              ),\n          }}\n        />\n      </div>\n    )\n  );\n}\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAdd(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAdd);\nexport default __webpack_public_path__ + \"static/media/add.ce2dad19.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useRef } from 'react';\nimport style from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { toast } from 'react-toastify';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { contactOperations } from '../../redux/contacts';\nimport { Button, Modal, Form } from 'react-bootstrap';\nimport { createPortal } from 'react-dom';\nimport FormGroup from '../FormGroup/FormGroup';\n\nexport default function ContactForm({ show, onHide }) {\n  const inputIdName = useRef(uuidv4());\n  const inputIdNumber = useRef(uuidv4());\n  const [newName, setNewName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const submitForm = e => {\n    e.preventDefault();\n    if (newName.trim() === '' || number.trim() === '') {\n      toast.info('fill in all fields');\n      return;\n    }\n\n    if (\n      items.some(({ name }) => name.toLowerCase() === newName.toLowerCase())\n    ) {\n      toast.error(newName + ' is already exist');\n      return;\n    }\n\n    dispatch(contactsActions.filterAction(''));\n    dispatch(contactOperations.addNewContact({ name: newName, number }));\n\n    toast.success('you have new contact');\n    setNewName('');\n    setNumber('');\n    onHide();\n  };\n\n  return createPortal(\n    <Modal\n      show={show}\n      size=\"lg\"\n      // dialogClassName={style.Modal}\n      aria-labelledby=\"example-custom-modal-styling-title\"\n      centered\n      keyboard\n      onHide={onHide}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>Modal</Modal.Title>\n      </Modal.Header>\n      <Form id=\"form\" className={style.Form} onSubmit={submitForm}>\n        <FormGroup\n          groupClass=\"mb-3\"\n          controlId={inputIdName.current}\n          labelText=\"Name\"\n          controlProps={{\n            className: style.Input,\n            type: 'text',\n            name: 'name',\n            value: newName,\n            onChange: e => setNewName(e.target.value),\n          }}\n        />\n        <FormGroup\n          groupClass=\"mb-3\"\n          controlId={inputIdNumber.current}\n          labelText=\"Number\"\n          controlProps={{\n            className: style.Input,\n            type: 'tel',\n            name: 'number',\n            value: number,\n            onChange: e => setNumber(e.target.value),\n          }}\n        />\n        <div className={style.AddBtn}>\n          <Button type=\"submit\" variant=\"primary\" color=\"primary\">\n            Add contact\n          </Button>\n        </div>\n      </Form>\n    </Modal>,\n    document.getElementById('root-portal'),\n  );\n}\n","import React, { useState } from 'react';\nimport { Container, Button } from 'react-bootstrap';\nimport ContactList from '../../components/ContactList/ContactList';\nimport Filter from '../../components/Filter/Filter';\nimport styles from './ContactsView.css';\nimport { ReactComponent as AddImage } from '../../icons/add.svg';\nimport ContactForm from '../../components/ContactForm/ContactForm';\n\n// const style = [styles.btn, styles['btn-circle']];\nexport default function ContactsView(params) {\n  const [show, setShow] = useState(false);\n  function openModal(e) {\n    setShow(true);\n  }\n  return (\n    <Container>\n      <h2>Contacts</h2>\n      <Button\n        type=\"button\"\n        className={[styles.btn, styles['btn-circle']]}\n        onClick={openModal}\n      >\n        <i className=\"fas fa-map\">\n          <AddImage width=\"40\" height=\"40\" fill=\"#fff\" />\n        </i>\n      </Button>\n      <Filter />\n\n      <ContactList />\n      <ContactForm show={show} onHide={() => setShow(false)} />\n    </Container>\n  );\n}\n"],"sourceRoot":""}